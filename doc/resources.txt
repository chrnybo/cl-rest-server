== Overview ==

An API-Centric Web Application is a web application that basically executes most, if not, all its functionality through API calls. For example, if you were to log in a user, you would send his credentials to the API, and the API would return to you a result saying if the user provided the correct user-password combination.

Another characteristic of an API-Centric Web Application is that the API will always be stateless, meaning it can’t recognize API calls by session. Since API calls will be made by usually via the backend code, it will be hard to implement session handling, since there are usually no cookies involved in that. This limitation is actually good — this “forces” a developer to build an API that works not based on the state of the current user, but rather on functionality, which in turn, makes it easier to test, since the current state of a user doesn’t need to be recreated.

== Security ==
* [[http://www.thebuzzmedia.com/designing-a-secure-rest-api-without-oauth-authentication|Designing secure REST APIs]]

== Tools ==
=== Developing/debugging ===
* [[http://curl.haxx.se|cURL]]
* [[https://addons.mozilla.org/en-us/firefox/addon/httprequester|HttpRequester Firefox extension]]
* [[https://addons.mozilla.org/en-US/firefox/addon/jsonview| JSONView Firefox add-on]]

=== Documentation ===
* https://github.com/mashery/iodocs
* http://swagger.wordnik.com/ 

== Resources ==
* [[http://martinfowler.com/bliki/TransMediaApplication.html|Transmedia applications]]
* [[http://code.google.com/p/implementing-rest|Implementing REST]]
* [[http://coderwall.com/p/u5o65a|API Design Best Practices]]
* [[http://net.tutsplus.com/tutorials/php/creating-an-api-centric-web-application|Tutorial]]
* [[http://info.apigee.com/Portals/62317/docs/web%20api.pdf| REST api design]]
* [[http://www.youtube.com/watch?v=hdSrT4yjS1g| REST api design video]]
* [[http://www.slideshare.net/jacksonj04/api-driven-development|Eat your own food]]

